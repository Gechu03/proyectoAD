/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectoad;

import static com.mycompany.proyectoad.ProyectoAD.odb;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.neodatis.odb.ClassRepresentation;
import org.neodatis.odb.ODB;
import org.neodatis.odb.ODBFactory;
import org.neodatis.odb.Objects;

/**
 *
 * @author edugi
 */
public class Interfaz extends javax.swing.JFrame {

    ODB odb;
    DAOEquipo dequipo;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {

        odb = ODBFactory.open("equipos.db");
        dequipo = new DAOEquipo(odb);
        initComponents();
        llenarListaJugadores();
        llenarListaEntrenadores();
        modal();
    }

    private void llenarListaEntrenadores() {
        final DefaultListModel model = new DefaultListModel();
        Entrenador e = new Entrenador();
        for (Entrenador temp : e.listaEntrenadores()) {
            model.addElement(temp);
        }
        ListaEntrenador.setModel(model);
    }

    private void modal() {
        inputID.setVisible(false);
        labelid.setVisible(false);
        Dimension pantallaTamano = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((pantallaTamano.width / 2) - (this.getWidth() / 2), (pantallaTamano.height / 2) - (this.getHeight() / 2));
        this.setResizable(false);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                
                    ArrayList<Equipo> temp = dequipo.devulveTodos();
                    for (Equipo mostrar : temp) {
                        System.out.println(mostrar);
                    }
                    odb.close();
                    System.exit(0);
                
                //cierra aplicacion
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        InputNombre = new javax.swing.JTextField();
        InputEstadio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaJugadores = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaEntrenador = new javax.swing.JList<>();
        BotonLimpiar = new javax.swing.JButton();
        BotonAlta = new javax.swing.JButton();
        BotonConsulta = new javax.swing.JButton();
        BotonModificiar = new javax.swing.JButton();
        labelid = new javax.swing.JLabel();
        inputID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(464, 546));

        jLabel1.setText("Nombre");

        jLabel2.setText("AÃ±adir nuevo Equipo");

        jLabel3.setText("Estadio");

        jLabel4.setText("Jugadores");

        jLabel5.setText("Entrenador");

        InputNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputNombreActionPerformed(evt);
            }
        });

        InputEstadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputEstadioActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(ListaJugadores);

        ListaEntrenador.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(ListaEntrenador);

        BotonLimpiar.setText("Limpiar");
        BotonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLimpiarActionPerformed(evt);
            }
        });

        BotonAlta.setText("Alta");
        BotonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAltaActionPerformed(evt);
            }
        });

        BotonConsulta.setText("Consulta");
        BotonConsulta.setToolTipText("");
        BotonConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConsultaActionPerformed(evt);
            }
        });

        BotonModificiar.setText("Modificar");
        BotonModificiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonModificiarActionPerformed(evt);
            }
        });

        labelid.setText("ID");

        inputID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(labelid))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(InputNombre)
                                    .addComponent(InputEstadio)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BotonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonAlta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonModificiar)
                        .addGap(18, 18, 18)
                        .addComponent(BotonConsulta)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(InputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(InputEstadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelid)
                    .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonLimpiar)
                    .addComponent(BotonAlta)
                    .addComponent(BotonConsulta)
                    .addComponent(BotonModificiar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputNombreActionPerformed

    private void InputEstadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputEstadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputEstadioActionPerformed

    private void BotonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLimpiarActionPerformed
        InputEstadio.setText("");
        InputNombre.setText("");
        ListaJugadores.clearSelection();
        ListaEntrenador.clearSelection();
    }//GEN-LAST:event_BotonLimpiarActionPerformed

    private Equipo recogerDatos() {
        String estadiotemp = InputEstadio.getText();
        String nombreTemp = InputNombre.getText();
        InputEstadio.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        InputNombre.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        ArrayList<String> listaJugadoresStringtemp = new ArrayList<>();
        if (!(ListaJugadores.getSelectedValuesList().isEmpty())) {
            listaJugadoresStringtemp = (ArrayList<String>) ListaJugadores.getSelectedValuesList();
        }

        ArrayList<Jugador> listaJugadorestemp = new ArrayList<>();
        for (int i = 0; i < listaJugadoresStringtemp.size(); i++) {
            Object temp = listaJugadoresStringtemp.get(i);
            Jugador juga = (Jugador) temp;
            listaJugadorestemp.add(juga);
        }

        Object entrenadortemp = ListaEntrenador.getSelectedValue();

        Entrenador entrenador = (Entrenador) entrenadortemp;
        Equipo temp = new Equipo(nombreTemp, estadiotemp, listaJugadorestemp, entrenador, 1);
        return temp;
    }
    // Dar de alta

    private void BotonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAltaActionPerformed
        String estadiotemp = InputEstadio.getText();
        String nombreTemp = InputNombre.getText();
        if (!(nombreTemp.equals("") || estadiotemp.equals(""))) {

            dequipo.insertar(recogerDatos());
            JOptionPane.showMessageDialog(BotonAlta.getParent(), "Todo Correcto");

        } else {

            if (nombreTemp.equals("")) {
                InputNombre.setBorder(BorderFactory.createLineBorder(Color.RED));
            } else {
                InputNombre.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            }

            if (estadiotemp.equals("")) {
                InputEstadio.setBorder(BorderFactory.createLineBorder(Color.RED));
            } else {
                InputEstadio.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            }

            JOptionPane.showMessageDialog(null, "Rellena Los campos obligatorios", "Introduce Todos los datos", 2);
        }

    }//GEN-LAST:event_BotonAltaActionPerformed

    private void BotonModificiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonModificiarActionPerformed
        String nombre = InputNombre.getText();
        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "Rellena Los campos obligatorios", "Introduce el nombre del equipo", 2);
        } else {
            ArrayList<Equipo> listaEquipos = dequipo.consultar(nombre);
            if (listaEquipos.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Fallo", "No se ha encontrado el equipo buscado", 2);
            } else if (listaEquipos.size() == 1) {
                Equipo temp = listaEquipos.get(0);

                Equipo actual = recogerDatos();

                dequipo.modificar(temp.getId(), actual);
            } else {
                if (inputID.getText().equals("")) {
                    inputID.setVisible(true);
                    labelid.setVisible(true);
                    int idtemp = dequipo.ultimoId();
                    JOptionPane.showMessageDialog(null, "Se han encontrado varios equipos con ese nombre introduce el id del mismo. Prueba con numeros del 0-" + idtemp + " ", "Fallo", 2);

                }else{
                    inputID.setVisible(false);
                    labelid.setVisible(false);
                    int idIntroducido = Integer.parseInt(inputID.getText());
                    for(Equipo eqtemp : listaEquipos){
                        if(eqtemp.getId() == idIntroducido){
                            Equipo actual = recogerDatos();
                            dequipo.modificar(eqtemp.getId(), actual);
                        }
                    }
                }
                    

            }

        }


    }//GEN-LAST:event_BotonModificiarActionPerformed

    private void BotonConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConsultaActionPerformed

        String recibo = InputNombre.getText();
        if (!(recibo.equals(""))) {
            JFrame childFrame = new InterfazConsulta(recibo, dequipo);
            childFrame.setLocationRelativeTo(null); //Que cuando aparezca la ventana sea en el centro de la pantalla principal
            childFrame.setResizable(false); //Que no se pueda cambiar el tamaÃ±o
            childFrame.setVisible(true); //Que sea visible
            childFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Evitar que se cierre el  padre con el hijo
        } else {
            JOptionPane.showMessageDialog(null, "El nombre no se ha rellenado");
        }

    }//GEN-LAST:event_BotonConsultaActionPerformed

    private void inputIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputIDKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_inputIDKeyTyped

    private void llenarListaJugadores() {
        final DefaultListModel model = new DefaultListModel();
        Jugador j = new Jugador();
        for (Jugador temp : j.listaJugadores()) {
            model.addElement(temp);
        }

        ListaJugadores.setModel(model);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Interfaz().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAlta;
    private javax.swing.JButton BotonConsulta;
    private javax.swing.JButton BotonLimpiar;
    private javax.swing.JButton BotonModificiar;
    private javax.swing.JTextField InputEstadio;
    private javax.swing.JTextField InputNombre;
    private javax.swing.JList<String> ListaEntrenador;
    private javax.swing.JList<String> ListaJugadores;
    private javax.swing.JTextField inputID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelid;
    // End of variables declaration//GEN-END:variables
}
